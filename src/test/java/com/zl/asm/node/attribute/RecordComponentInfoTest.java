package com.zl.asm.node.attribute;

import com.zl.asm.ByteContainer;
import com.zl.asm.node.constant.ConstantPoolNode;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

class RecordComponentInfoTest {

    byte[] bytes = new byte[]{0, 11, 0, 12, 0, 0};

    byte[] constantPoolBytes = new byte[]{0, 69, 10, 0, 2, 0, 3, 7, 0, 4, 12, 0, 5, 0, 6, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 82, 101, 99, 111, 114, 100, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 9, 0, 8, 0, 9, 7, 0, 10, 12, 0, 11, 0, 12, 1, 0, 81, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 36, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 1, 0, 17, 110, 117, 109, 84, 111, 107, 101, 110, 115, 67, 111, 110, 115, 117, 109, 101, 100, 1, 0, 1, 73, 9, 0, 8, 0, 14, 12, 0, 15, 0, 16, 1, 0, 4, 116, 101, 120, 116, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 18, 0, 0, 0, 18, 12, 0, 19, 0, 20, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 103, 40, 76, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 36, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 18, 0, 0, 0, 22, 12, 0, 23, 0, 24, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 86, 40, 76, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 36, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 59, 41, 73, 18, 0, 0, 0, 26, 12, 0, 27, 0, 28, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 104, 40, 76, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 36, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 35, 76, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 108, 97, 110, 103, 47, 78, 117, 108, 108, 97, 98, 108, 101, 59, 1, 0, 22, 40, 73, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 86, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98, 108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 83, 76, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 36, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 59, 1, 0, 16, 77, 101, 116, 104, 111, 100, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 1, 0, 34, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 3, 40, 41, 73, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0, 1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 41, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 46, 106, 97, 118, 97, 1, 0, 8, 78, 101, 115, 116, 72, 111, 115, 116, 7, 0, 48, 1, 0, 68, 111, 114, 103, 47, 115, 112, 114, 105, 110, 103, 102, 114, 97, 109, 101, 119, 111, 114, 107, 47, 97, 111, 112, 47, 97, 115, 112, 101, 99, 116, 106, 47, 65, 115, 112, 101, 99, 116, 74, 65, 100, 118, 105, 99, 101, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 68, 105, 115, 99, 111, 118, 101, 114, 101, 114, 1, 0, 6, 82, 101, 99, 111, 114, 100, 1, 0, 16, 66, 111, 111, 116, 115, 116, 114, 97, 112, 77, 101, 116, 104, 111, 100, 115, 15, 6, 0, 52, 10, 0, 53, 0, 54, 7, 0, 55, 12, 0, 56, 0, 57, 1, 0, 31, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 114, 117, 110, 116, 105, 109, 101, 47, 79, 98, 106, 101, 99, 116, 77, 101, 116, 104, 111, 100, 115, 1, 0, 9, 98, 111, 111, 116, 115, 116, 114, 97, 112, 1, 0, -79, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 105, 110, 118, 111, 107, 101, 47, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 115, 36, 76, 111, 111, 107, 117, 112, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 105, 110, 118, 111, 107, 101, 47, 84, 121, 112, 101, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 91, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 105, 110, 118, 111, 107, 101, 47, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 8, 0, 59, 1, 0, 22, 110, 117, 109, 84, 111, 107, 101, 110, 115, 67, 111, 110, 115, 117, 109, 101, 100, 59, 116, 101, 120, 116, 15, 1, 0, 7, 15, 1, 0, 13, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 12, 80, 111, 105, 110, 116, 99, 117, 116, 66, 111, 100, 121, 7, 0, 65, 1, 0, 37, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 105, 110, 118, 111, 107, 101, 47, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 115, 36, 76, 111, 111, 107, 117, 112, 7, 0, 67, 1, 0, 30, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 105, 110, 118, 111, 107, 101, 47, 77, 101, 116, 104, 111, 100, 72, 97, 110, 100, 108, 101, 115, 1, 0, 6, 76, 111, 111, 107, 117, 112};

    @Test
    public void test() {
        ByteContainer constantPoolContainer = new ByteContainer(constantPoolBytes);
        ConstantPoolNode constantPoolNode = new ConstantPoolNode(constantPoolContainer);
        ByteContainer byteContainer = new ByteContainer(bytes);
        RecordComponentInfo recordComponentInfo = new RecordComponentInfo(byteContainer, constantPoolNode);
        int nameIndex = recordComponentInfo.getNameIndex();
        assertEquals(11, nameIndex);
        int descriptorIndex = recordComponentInfo.getDescriptorIndex();
        assertEquals(12, descriptorIndex);
        int attributesCount = recordComponentInfo.getAttributesCount();
        assertEquals(0, attributesCount);
        assertEquals(attributesCount, recordComponentInfo.getAttributes().length);
    }


}